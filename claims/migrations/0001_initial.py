# Generated by Django 5.0.2 on 2025-07-09 21:34

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Descriptive name for the claim', max_length=200)),
                ('company', models.CharField(help_text='Company name', max_length=200)),
                ('accounting_period', models.CharField(help_text='e.g., 2023-2024', max_length=50)),
                ('description', models.TextField(blank=True, help_text='Brief description of R&D activities')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('in_review', 'In Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed')], default='draft', max_length=20)),
                ('total_costs', models.DecimalField(decimal_places=2, default=0, help_text='Total costs across all categories', max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('eligible_costs', models.DecimalField(decimal_places=2, default=0, help_text='Total eligible costs for R&D credit', max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('credit_amount', models.DecimalField(decimal_places=2, default=0, help_text='Calculated R&D tax credit amount', max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='claims', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('filename', models.CharField(max_length=255)),
                ('original_filename', models.CharField(help_text='Original filename when uploaded', max_length=255)),
                ('file_path', models.FileField(upload_to='claims/attachments/%Y/%m/')),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('file_type', models.CharField(choices=[('payroll', 'Payroll Data'), ('invoice', 'Invoice'), ('contract', 'Contract'), ('timesheet', 'Timesheet'), ('supporting_doc', 'Supporting Document'), ('other', 'Other')], default='other', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Description of the attachment')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_attachments', to=settings.AUTH_USER_MODEL)),
                ('claim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='claims.claim')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='CostCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(choices=[('staff', 'Staff Costs'), ('subcontractor', 'Subcontractor Costs'), ('epw', 'Externally Provided Workers'), ('software', 'Software Costs'), ('consumables', 'Consumables'), ('equipment', 'Equipment'), ('other', 'Other Costs')], max_length=20)),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('eligible_cost', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('description', models.TextField(blank=True, help_text='Optional summary or notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('claim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cost_categories', to='claims.claim')),
            ],
            options={
                'ordering': ['category'],
            },
        ),
        migrations.CreateModel(
            name='CostLineItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('staff', 'Staff'), ('epw', 'Externally Provided Worker'), ('subcontractor', 'Subcontractor'), ('software', 'Software'), ('cloud', 'Cloud Services'), ('consumables', 'Consumables'), ('equipment', 'Equipment'), ('other', 'Other')], help_text='Type of cost item', max_length=20)),
                ('connected', models.BooleanField(default=False, help_text='Whether EPW/subcontractor is connected (affects restrictions)')),
                ('name', models.CharField(help_text='Name of individual or supplier', max_length=200)),
                ('company_name', models.CharField(blank=True, help_text='Company name for EPWs/subcontractors', max_length=200)),
                ('role', models.CharField(blank=True, help_text='Job title/function/service description', max_length=200)),
                ('r_and_d_activity', models.TextField(blank=True, help_text='Description of R&D work performed')),
                ('gross_amount', models.DecimalField(decimal_places=2, help_text='Original cost amount', max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('r_and_d_percentage', models.DecimalField(decimal_places=2, default=100, help_text='Percentage attributable to R&D', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('eligible_amount', models.DecimalField(decimal_places=2, default=0, help_text='Calculated eligible amount (after restrictions)', max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('grant_funded', models.BooleanField(default=False, help_text='Funded by grant or subsidy')),
                ('grant_source', models.CharField(blank=True, help_text='Source of grant funding', max_length=200)),
                ('is_excluded', models.BooleanField(default=False, help_text='Excluded from R&D calculation')),
                ('exclusion_reason', models.CharField(blank=True, help_text='Reason for exclusion (e.g., PILON, Bonus, Insufficient evidence)', max_length=500)),
                ('tags', models.JSONField(blank=True, default=list, help_text='Tags like NIC uplift, capped, etc.')),
                ('notes', models.TextField(blank=True, help_text='Freeform notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('claim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='claims.claim')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_line_items', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['type', 'name', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='GrantOrSubsidy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('source', models.CharField(help_text='Source of grant/subsidy', max_length=200)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('applies_to', models.CharField(choices=[('claim', 'Entire Claim'), ('line_item', 'Specific Line Item')], default='claim', max_length=20)),
                ('impact_description', models.TextField(help_text='Description of how this affects the claim')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('claim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grants_subsidies', to='claims.claim')),
                ('line_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='claims.costlineitem')),
            ],
            options={
                'ordering': ['source', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='NarrativeSection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question', models.CharField(choices=[('scientific_advance', 'What scientific advance was sought?'), ('technical_uncertainty', 'What technical uncertainty was overcome?'), ('r_and_d_activities', 'What R&D activities were undertaken?'), ('competent_professional', 'Competent professional analysis'), ('other', 'Other')], max_length=50)),
                ('custom_question', models.CharField(blank=True, help_text="Custom question if 'other' selected", max_length=500)),
                ('response', models.TextField(help_text='Detailed response to the question')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('claim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='narrative_sections', to='claims.claim')),
            ],
            options={
                'ordering': ['question'],
            },
        ),
        migrations.CreateModel(
            name='ReviewComment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comment_type', models.CharField(choices=[('claim', 'Claim Comment'), ('line_item', 'Line Item Comment')], max_length=20)),
                ('comment', models.TextField(help_text='Comment text')),
                ('is_resolved', models.BooleanField(default=False, help_text='Whether this comment has been resolved')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_comments', to=settings.AUTH_USER_MODEL)),
                ('claim', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='claims.claim')),
                ('line_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='claims.costlineitem')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='claim',
            index=models.Index(fields=['status', 'created_at'], name='claims_clai_status_58edc3_idx'),
        ),
        migrations.AddIndex(
            model_name='claim',
            index=models.Index(fields=['company', 'accounting_period'], name='claims_clai_company_811fdc_idx'),
        ),
        migrations.AddIndex(
            model_name='attachment',
            index=models.Index(fields=['claim', 'file_type'], name='claims_atta_claim_i_a791a5_idx'),
        ),
        migrations.AddIndex(
            model_name='attachment',
            index=models.Index(fields=['uploaded_by', 'uploaded_at'], name='claims_atta_uploade_635a40_idx'),
        ),
        migrations.AddIndex(
            model_name='costcategory',
            index=models.Index(fields=['claim', 'category'], name='claims_cost_claim_i_67be29_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='costcategory',
            unique_together={('claim', 'category')},
        ),
        migrations.AddIndex(
            model_name='costlineitem',
            index=models.Index(fields=['claim', 'type'], name='claims_cost_claim_i_7d132c_idx'),
        ),
        migrations.AddIndex(
            model_name='costlineitem',
            index=models.Index(fields=['type', 'is_excluded'], name='claims_cost_type_b7260b_idx'),
        ),
        migrations.AddIndex(
            model_name='costlineitem',
            index=models.Index(fields=['name'], name='claims_cost_name_7d9730_idx'),
        ),
        migrations.AddIndex(
            model_name='grantorsubsidy',
            index=models.Index(fields=['claim', 'applies_to'], name='claims_gran_claim_i_595145_idx'),
        ),
        migrations.AddIndex(
            model_name='narrativesection',
            index=models.Index(fields=['claim', 'question'], name='claims_narr_claim_i_6f1852_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='narrativesection',
            unique_together={('claim', 'question')},
        ),
        migrations.AddIndex(
            model_name='reviewcomment',
            index=models.Index(fields=['comment_type', 'is_resolved'], name='claims_revi_comment_8f67c2_idx'),
        ),
        migrations.AddIndex(
            model_name='reviewcomment',
            index=models.Index(fields=['author', 'created_at'], name='claims_revi_author__483ebe_idx'),
        ),
    ]
